/*
	Test file for lexer
*/

const VERSION := "V0.69"; // Type inferred as `str`
const SUB_VER_NUM: int = 420; // Same as below
const A := 'A';

var nice: int; // Declare, but don't define
nice := 69; // Type inferred as `int`
nicer: int = 420; // Explicit type

nice, nicer := 69, "420"; // Type inferred as `int` & `str`

func add(x: int, y: int) -> int {
    return x + y;
}

var result: int;
result = add(42, 27);
io.print("This is nice: %\n", result);

if !nice {
    io.print("Not nice! :(\n");
} else {
    io.print("%, Nice! :)\n", nice);
}

isnice := if nice == 69 true, false
// First value is returned if true, second if false

x && y // AND
x || y // OR
x <= y // Less than or equal to
x == y // Equal to
x != y // Not equal to
x > y  // Greater than
x < y  // Less than
x >= y // Greater than or equal to
